// Simple css reset
* {
    margin: 0;
    padding: 0;
}

// Define font
@font-face {
    font-family: "JosefinSans";
    src: url("./assets/font/JosefinSans-Regular.ttf") format("truetype");
    font-weight: 400;
    font-style: normal;
}

@font-face {
    font-family: "JosefinSans";
    src: url("./assets/font/JosefinSans-Bold.ttf") format("truetype");
    font-weight: 700;
    font-style: normal;
}

// Fix the from element font
input,
button,
textarea {
    font-family: inherit;
    font-size: inherit;
    outline: none;
}

// Fix the clear
html {
    box-sizing: border-box;
    -webkit-box-sizing: border-box;
    -moz-box-sizing: border-box;
}

*,
*:before,
*:after {
    box-sizing: inherit;
    -webkit-box-sizing: inherit;
    -moz-box-sizing: inherit;
}

// Variables
$primary-color: #00a4e4;
$success-color: #00c300;
$danger-color: #ec1c24;
$dark-color: #231f20;
$light-color: #d7d7d8;
$danger-color: #ff3d00;
$font-stack: "JosefinSans", Arial, Helvetica, sans-serif;

// Set the global font and color for whole app
body {
    font-family: $font-stack;
    color: $dark-color;
}

// Container
.container {
    width: 90%;
    min-height: 70vh;
    margin: auto;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
}

// Btn Component
.btn {
    background-color: transparent;
    border: none;
    text-decoration: none;
    cursor: pointer;
    padding: 0.5em 1em;
    border-radius: 3px;
    transition: 0.5s;
    &.btn_success {
        background-color: $success-color;
        color: #fff;
        &:hover {
            background-color: rgba($success-color, 0.8);
        }
    }
    &.btn_primary {
        background-color: $primary-color;
        color: #fff;
        &:hover {
            background-color: rgba($primary-color, 0.8);
        }
    }
    &.btn_dark {
        background-color: $dark-color;
        color: #fff;
        &:hover {
            background-color: rgba($dark-color, 0.9);
        }
    }
    &.btn_block {
        width: 100%;
    }
}

// Card-box is wrapper for card item and card updateor
.card-box {
    width: 200px;
}

// Card Item Component
.card {
    text-align: center;
    .card__img-box {
        width: 100%;
        .card__img {
            display: block;
            width: 100%;
        }
    }
    &.card_show {
        animation: shake 0.5s ease infinite;
        -webkit-animation: shake 0.5s ease infinite;
        -moz-animation: shake 0.5s ease infinite;
    }

    .card__info {
        margin: 1em;
        .card__title {
            padding: 0.5em;
            display: flex;
            justify-content: space-around;

            &.card_sport {
                color: $success-color;
            }
            &.card_fun {
                color: $primary-color;
            }
            &.card_art {
                color: $danger-color;
            }
        }
    }
}

// Form Component
.form {
    .form__item {
        margin-bottom: 1em;
        .form__label {
            color: $success-color;
            display: block;
            padding: 0.25em 0;
        }
        .form__input {
            width: 100%;
            padding: 0.5em;
            resize: none;
            color: rgba($dark-color, 0.8);
            border: 1px solid #aaa;
            &:hover,
            &:focus {
                border-color: $success-color;
            }
        }
        textarea.form__input {
            height: 100px;
        }
    }
}

// Animation for cards with code equal to 1
@keyframes shake {
    0% {
        transform: translate(1px, 1px) rotate(0deg);
        -webkit-transform: translate(1px, 1px) rotate(0deg);
        -moz-transform: translate(1px, 1px) rotate(0deg);
    }
    10% {
        transform: translate(-1px, -2px) rotate(-1deg);
        -webkit-transform: translate(-1px, -2px) rotate(-1deg);
        -moz-transform: translate(-1px, -2px) rotate(-1deg);
    }
    20% {
        transform: translate(-3px, 0px) rotate(1deg);
        -webkit-transform: translate(-3px, 0px) rotate(1deg);
        -moz-transform: translate(-3px, 0px) rotate(1deg);
    }
    30% {
        transform: translate(3px, 2px) rotate(0deg);
        -webkit-transform: translate(3px, 2px) rotate(0deg);
        -moz-transform: translate(3px, 2px) rotate(0deg);
    }
    40% {
        transform: translate(1px, -1px) rotate(1deg);
        -webkit-transform: translate(1px, -1px) rotate(1deg);
        -moz-transform: translate(1px, -1px) rotate(1deg);
    }
    50% {
        transform: translate(-1px, 2px) rotate(-1deg);
        -webkit-transform: translate(-1px, 2px) rotate(-1deg);
        -moz-transform: translate(-1px, 2px) rotate(-1deg);
    }
    60% {
        transform: translate(-3px, 1px) rotate(0deg);
        -webkit-transform: translate(-3px, 1px) rotate(0deg);
        -moz-transform: translate(-3px, 1px) rotate(0deg);
    }
    70% {
        transform: translate(3px, 1px) rotate(-1deg);
        -webkit-transform: translate(3px, 1px) rotate(-1deg);
        -moz-transform: translate(3px, 1px) rotate(-1deg);
    }
    80% {
        transform: translate(-1px, -1px) rotate(1deg);
        -webkit-transform: translate(-1px, -1px) rotate(1deg);
        -moz-transform: translate(-1px, -1px) rotate(1deg);
    }
    90% {
        transform: translate(1px, 2px) rotate(0deg);
        -webkit-transform: translate(1px, 2px) rotate(0deg);
        -moz-transform: translate(1px, 2px) rotate(0deg);
    }
    100% {
        transform: translate(1px, -2px) rotate(-1deg);
        -webkit-transform: translate(1px, -2px) rotate(-1deg);
        -moz-transform: translate(1px, -2px) rotate(-1deg);
    }
}

// Screen min-width 40em
@media screen and (min-width: 40em) {
    .container {
        width: 80%;
        flex-direction: row;
    }
}
